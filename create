#!/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

if [ ! -f config ];
then
    echo "Missing config file" 1>&2
    exit 1
fi
source config

kubectl get namespace $namespace > /dev/null 2>&1
if [ $? -ne 0 ];
then
    kubectl create namespace $namespace
    echo "Created namespace $namespace in cluster"
fi

method="apply"
kubectl get ingress $application_name --namespace=$namespace > /dev/null 2>&1
if [ $? -eq 0 ];
then
    echo "Ingress controller for application already exists" 1>&2
    method="replace"
fi

# add hostnames
array=(`echo $hostname | sed 's/,/\n/g'`)

echo -e "  tls:" >> ingress.yaml
for line in "${array[@]}"
do
  echo -e "  - hosts:\n    - \"$line\"\n    secretName: $line\n" >> ingress.yaml
done

echo -e "  rules:" >> ingress.yaml

for line in "${array[@]}"
do
  echo -e "  - host: $line\n    http:\n      paths:\n      - backend:\n          serviceName: {{application_name}}\n          servicePort: 80\n        path: /" >> ingress.yaml
done

cat ingress.yaml \
    | sed "s/{{application_name}}/$application_name/" \
    | sed "s/{{namespace}}/$namespace/" \
    | kubectl $method -f -

if [ "$application_name" == "portal" ];
    cat ingress-klinikk.yaml \
        | sed "s/{{application_name}}/$application_name/" \
        | sed "s/{{namespace}}/$namespace/" \
        | kubectl $method -f -
fi

method="apply"
cluster_ip=""
build_id=0
kubectl get service $application_name --namespace=$namespace > /dev/null 2>&1
if [ $? -eq 0 ];
then
    echo "Service for application already exists" 1>&2
    method="replace"
    cluster_ip="`kubectl get service $application_name -o yaml --namespace=$namespace | grep 'clusterIP:' | cut -d ':' -f 2 | tr -d ' '`"
    build_id="`kubectl get service $application_name -o yaml --namespace=$namespace | grep 'build:' | cut -d ':' -f 2 | tr -d ' ' | tr -d '\"'`"
fi

cat service.yaml \
    | sed "s/{{application_name}}/$application_name/" \
    | sed "s/{{namespace}}/$namespace/" \
    | sed "s/{{cluster_ip}}/$cluster_ip/" \
    | sed "s/{{build_id}}/$build_id/" \
    | kubectl $method -f -
